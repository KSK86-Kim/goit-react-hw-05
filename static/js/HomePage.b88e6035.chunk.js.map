{"version":3,"sources":["components/Main/Main.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Main/Main.jsx","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/HomePage/HomePage.jsx"],"names":["module","exports","Main","children","className","styles","Container","totalsClass","borderClass","container","Section","this","props","title","Component","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","addContact","reset","handleTest","test","onSubmit","type","pattern","onChange","required","onClick","connect","dispatch","obj","action","data","actions","ContactItem","info","id","onDeleteContact","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","items","contactList","deleteContact","map","item","e","filterContacts","target","HomePage"],"mappings":"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","file":"static/js/HomePage.b88e6035.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3OuYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3G9D5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2fMaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3p4Yx\",\"from\":\"ContactForm_from__2bZAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-list\":\"ContactList_contact-list__31rDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__32iZ5\",\"filter__label\":\"Filter_filter__label__1DMi0\",\"filter__input\":\"Filter_filter__input__3Q1KV\"};","import React from 'react';\nimport styles from './Main.module.css';\n\nconst Main = ({ children }) => {\n  return <header className={styles['main']}>{children}</header>;\n};\n\nexport default Main;\n","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children, borderClass }) => {\n  const totalsClass = [styles.container];\n  return <div className={totalsClass}>{children}</div>;\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h2 className={styles['title']}>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport action from '../../redux/contact/contact-actions';\nimport styles from './ContactForm.module.css';\nimport actions from '../../redux/contact/contact-actions';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact(this.state);\n    this.reset();\n  };\n  handleTest = event => {\n    event.preventDefault();\n    this.props.test(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles['from']} onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input\n              className={styles['input']}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              onChange={this.handleChange}\n              required\n              value={this.state.name}\n            />\n          </label>\n          <label>\n            Number:\n            <input\n              className={styles['input']}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              onChange={this.handleChange}\n              required\n              value={this.state.number}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <button type=\"button\" onClick={this.handleTest}>\n          Add contact\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: obj => dispatch(action.addContact(obj)),\n  test: data => dispatch(actions.test(data)),\n});\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ info: { name, number, id }, onDeleteContact }) => {\n  return (\n    <li>\n      {name} : {number}\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/contact/contact-actions';\nimport ContactItem from '../ContactItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <>\n      {contactList.map(item => {\n        return (\n          <ContactItem\n            key={item.id}\n            info={item}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contactList: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string).isRequired,\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contactList: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contact/contact-actions';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label className={styles['filter__label']}>\n        Find contacts by Name\n        <br />\n        <input\n          className={styles['filter__input']}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({\n  value: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\n\nimport Main from '../../components/Main';\nimport Container from '../../components/Container';\nimport Section from '../../components/Section';\n\n//////\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <>\n        <Main>\n          <Section title=\"Phonebook\">\n            <Container>\n              <ContactForm />\n            </Container>\n            <Container>\n              <h2>Filter</h2>\n              <Container>\n                <Filter />\n              </Container>\n              <h2>Contacts</h2>\n              <ContactList></ContactList>\n            </Container>\n          </Section>\n        </Main>\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n"],"sourceRoot":""}